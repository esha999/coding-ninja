// give count of subarrays which are divisible by K


class Solution {
    public int subarraysDivByK(int[] nums, int k) {
        HashMap<Integer,Integer> hm= new HashMap<>();
        hm.put(0,1);
        int count=0, sum=0;
        for(int i=0;i<nums.length;i++)
        {
            sum=sum+nums[i];
            int r=sum%k;
            if(r<0)
            {
                r=r+k;
            }
            if(!hm.containsKey(r))
            {
                hm.put(r,1);
            }
            else{
                count+=hm.get(r);
               // count+=c;
                hm.put(r,hm.get(r)+1);

            }

        }
        return count;
    }
}
